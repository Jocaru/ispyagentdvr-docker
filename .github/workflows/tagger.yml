name: Check for updates and tag
on:
  #Push trigger
  push:
    branches:
      - master
  #Manual dispatch trigger
  workflow_dispatch:
  #Remote github trigger
  repository_dispatch:
    types: execute
  #Run 3 times per day, evenly distributed
  schedule:
    - cron: "0 */8 * * *"

jobs:
  build:
    # Job name is Greeting
    name: Update iSpy Agent DVR
    # This runs the job on ubuntu
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Get previous tag
        id: lastTag
        run: echo TAG_VERSION=$(git describe --tags `git rev-list --tags --max-count=1`)

      - name: Get file name
        run: echo FILE_LOCATION=$(echo $(wget -qO- "https://www.ispyconnect.com/api/Agent/DownloadLocation2?productID=24&is64=true&platform=Linux" | tr -d '"')) >> $GITHUB_ENV

      - name: Print FILE_LOCATION
        run: echo ${{env.FILE_LOCATION}}

      - name: Get version number
        run: echo VERSION=$(echo $FILE_LOCATION | grep -Po "(?<=Linux64_).*(?=.zip)" | tr _ .) >> $GITHUB_ENV

      - name: Print VERSION
        run: echo ${{env.VERSION}}

      - name: Compare versions
        if: ${{env.TAG_VERSION != env.VERSION}}
        run: echo New tag ${{env.VERSION}} will be created

      - name: Update Agent version in Dockerfile
        id: update_dockerfile
        if: ${{env.TAG_VERSION != env.VERSION}}
        uses: doitandbedone/dockerfile-updater@feature/output-sha-and-branch-name
        with:
          token: ${{secrets.PAT}}
          args: "FILE_LOCATION=\"${{env.FILE_LOCATION}}\""

      - uses: actions/checkout@v2
      - name: Tag new version
        if: ${{env.TAG_VERSION != env.VERSION}}
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git tag -a $VERSION $OUTPUT_SHA
          git push
        env:
          OUTPUT_SHA: ${{steps.update_dockerfile.outputs.sha}}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
