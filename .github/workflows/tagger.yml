name: Check for updates and tag
on:
  #Push trigger
  push:
    branches:
      - master
  #Manual dispatch trigger
  workflow_dispatch:
  #Remote github trigger
  repository_dispatch:
    types: execute
  #Run 3 times per day, evenly distributed
  schedule:
    - cron: "0 */8 * * *"

jobs:
  build:
    # Job name is Greeting
    name: Update iSpy Agent DVR
    # This runs the job on ubuntu
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Get previous tag
        id: lastTag
        run: echo TAG_VERSION=$(git describe --tags `git rev-list --tags --max-count=1`) >> $GITHUB_ENV

      - name: Get file name
        run: echo FILE_LOCATION=$(echo $(wget -qO- "https://www.ispyconnect.com/api/Agent/DownloadLocation2?productID=24&is64=true&platform=Linux" | tr -d '"')) >> $GITHUB_ENV

      - name: Print FILE_LOCATION
        run: echo ${{env.FILE_LOCATION}}

      - name: Get version number
        run: echo VERSION=$(echo $FILE_LOCATION | grep -Po "(?<=Linux64_).*(?=.zip)" | tr _ .) >> $GITHUB_ENV

      - name: Print VERSION
        run: echo ${{env.VERSION}}

      - name: Compare versions
        run: |
          dpkg --compare-versions $TAG_VERSION "lt" $VERSION
          echo NEEDS_TAG=$? >> $GITHUB_ENV
          echo $NEEDS_TAG
          if [ $NEEDS_TAG ]
          then
            echo New tag ${{env.VERSION}} will be created
          else
            echo No new tag will be created
          fi

      - name: Update Agent version in Dockerfile
        id: update_dockerfile
        if: ${{env.NEEDS_TAG}}
        uses: doitandbedone/dockerfile-updater@feature/output-sha-and-branch-name
        with:
          token: ${{secrets.PAT}}
          args: "FILE_LOCATION=\"${{env.FILE_LOCATION}}\""

      - name: Tag new version
        if: ${{env.NEEDS_TAG}}
        uses: actions/github-script@v3
        env:
          SHA: ${{steps.update_dockerfile.outputs.sha}}
        with:
          github-token: ${{ secrets.PAT }}
          script: |
            console.log(context)
            github.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: "refs/tags/" + process.env.VERSION,
              sha: process.env.SHA
            })
